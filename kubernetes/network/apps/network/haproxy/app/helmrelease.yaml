---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app haproxy
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      haproxy:
        strategy: RollingUpdate
        replicas: 2
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/haproxytech/haproxy-docker-alpine
              tag: 3.2.4@sha256:cef4e873d8f2c5f12d5a590036b16f34499b883a74e62269a1a14558e82d8333
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: 8123
                    path: /
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            seccompProfile: { type: RuntimeDefault }
    service:
      hass:
        controller: haproxy
        ports:
          http:
            port: &port 8123
            appProtocol: kubernetes.io/ws
      metrics:
        controller: haproxy
        ports:
          http:
            port: 8405
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    route:
      app:
        hostnames:
          - "ha.${CLUSTER_DOMAIN}"
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: haproxy-hass
                port: *port
            timeouts:
              request: 0s
              backendRequest: 0s
    persistence:
      config:
        type: configMap
        name: haproxy-config
        globalMounts:
          - path: /usr/local/etc/haproxy/haproxy.cfg
            subPath: haproxy.cfg
      tmp:
        type: emptyDir
