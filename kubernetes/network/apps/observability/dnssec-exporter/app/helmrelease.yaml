---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dnssec-exporter
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      dnssec-exporter:
        containers:
          app:
            image:
              repository: ghcr.io/haraldkoch/prometheus-dnssec-exporter
              tag: 0.6.0@sha256:39083f131755279189d36baae7169e9cf3786c639f43cdae7b6f8a939a7392b4
            args:
              - --config
              - /config/dnssec-checks
              - --resolvers
              - "8.8.8.8:53,1.1.1.1:53,${PRIVATE_GATEWAY}:53"
            env:
              TZ: ${TIMEZONE:=Etc/UTC}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 100Mi
        pod:
          annotations:
            secret.reloader.stakater.com/reload: dnssec-exporter-secret
          securityContext:
            runAsUser: 1022
            runAsGroup: 1022
            runAsNonRoot: true
    service:
      app:
        controller: dnssec-exporter
        ports:
          metrics:
            protocol: TCP
            port: 9204
        type: LoadBalancer
        externalIPs: ["${EXPORTERS_IPV4}", "${EXPORTERS_IPV6}"]
        externalTrafficPolicy: Local
        ipFamilies: [IPv4, IPv6]
        ipFamilyPolicy: PreferDualStack
        annotations:
          external-dns.alpha.kubernetes.io/hostname: exporters.${CLUSTER_DOMAIN}
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scrapeTimeout: 30s
            metricRelabelings:
              - action: labeldrop
                regex: (pod)
              - action: replace
                sourceLabels: ["service"]
                targetLabel: instance
    persistence:
      config:
        type: secret
        name: dnssec-exporter-secret
        globalMounts:
          - path: /config/dnssec-checks
            subPath: dnssec-checks
