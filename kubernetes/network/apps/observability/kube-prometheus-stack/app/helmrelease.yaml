---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: kube-prometheus-stack
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 76.3.0
  url: oci://ghcr.io/prometheus-community/charts/kube-prometheus-stack
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  values:
    crds:
      enabled: true
      upgradeJob:
        enabled: true
        forceConflicts: true
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      route:
        main:
          enabled: true
          hostnames: ["alertmanager.${CLUSTER_DOMAIN}"]
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https
      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "amcluster-network.${CLUSTER_DOMAIN}"
          lbipam.cilium.io/ips: "${ALERTMANAGER_IPV4}"
        additionalPorts:
          - name: tcp-mesh
            port: 9094
            protocol: TCP
            targetPort: 9094
          - name: udp-mesh
            port: 9094
            protocol: UDP
            targetPort: 9094
        type: LoadBalancer
      alertmanagerSpec:
        additionalPeers:
          - amcluster-main.${CLUSTER_DOMAIN}:9094
          - amcluster-uvt.${CLUSTER_DOMAIN}:9094
        alertmanagerConfiguration:
          name: alertmanager
          global:
            resolveTimeout: 5m
        clusterAdvertiseAddress: "${ALERTMANAGER_IPV4}:9094"
        clusterLabel: kochhaus
        externalUrl: https://alertmanager.${CLUSTER_DOMAIN}
        forceEnableClusterMode: true
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 10Mi
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            memory: 64Mi
    kubeEtcd:
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus:
      route:
        main:
          enabled: true
          hostnames: ["prometheus.${CLUSTER_DOMAIN}"]
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https
      prometheusSpec:
        image:
          registry: docker.io
          repository: prompp/prompp
          tag: 2.53.2-0.4.0
        securityContext:
          runAsNonRoot: true
          runAsUser: 64535
          runAsGroup: 64535
          fsGroup: 64535
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        retention: 14d
        retentionSize: 25GB
        externalLabels:
          cluster: network
        additionalAlertManagerConfigs:
          - scheme: http
            static_configs:
              - targets:
                  - "amcluster-main.${CLUSTER_DOMAIN}:9093"
                labels:
                  server: amcluster-main.${CLUSTER_DOMAIN}
              - targets:
                  - "amcluster-uvt.${CLUSTER_DOMAIN}:9093"
                labels:
                  server: amcluster-uvt.${CLUSTER_DOMAIN}
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 1Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 25Gi
    prometheusOperator:
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
        limits:
          memory: 384Mi
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
            - action: drop
              regex: /var/lib/kubelet/pods.+
              sourceLabels: ["mountpoint"]
            - action: labeldrop
              regex: (pod)
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    grafana:
      enabled: false
