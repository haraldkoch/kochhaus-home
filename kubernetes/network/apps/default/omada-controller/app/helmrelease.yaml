---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app omada-controller
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    controllers:
      omada-controller:
        containers:
          app:
            image:
              repository: mbentley/omada-controller
              tag: 5.15.24.19@sha256:6aabed11413a27addf0a432aa6d920d8974a717a14ab1b5fe5e1f3eb302e52ac
            env:
              TZ: ${TIMEZONE:=Etc/UTC}
              MANAGE_HTTP_PORT: "8088"
              MANAGE_HTTPS_PORT: "8043"
              PORTAL_HTTP_PORT: "8888"
              PORTAL_HTTPS_PORT: "8843"
              SHOW_SERVER_LOGS: "true"
              SHOW_MONGODB_LOGS: "true"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 500m
                memory: 1200Mi
              limits:
                memory: 2400Mi
    service:
      app:
        controller: omada-controller
        primary: true
        annotations:
          lbipam.cilium.io/ips: "${OMADA_IPV4},${OMADA_IPV6}"
        ports:
          http:
            port: 8043
            targetPort: 8043
            protocol: TCP
      controller:
        controller: omada-controller
        type: LoadBalancer
        externalTrafficPolicy: Local
        ipFamilies: [IPv4, IPv6]
        ipFamilyPolicy: PreferDualStack
        ports:
          # # Docs: https://www.tp-link.com/us/support/faq/3281/
          # Management Ports
          mgmt-8088-tcp:
            port: 8088
            targetPort: 8088
            protocol: TCP
          mgmt-8043-tcp:
            port: 8043
            protocol: TCP
            targetPort: 8043
          portal-8843-tcp:
            port: 8843
            protocol: TCP
            targetPort: 8843
          # Device Discovery, Adoption, Management, and Upgrade
          eap-v5-discovery:
            port: 29810
            protocol: UDP
            targetPort: 29810
          eap-v4-discovery1:
            port: 29811
            protocol: TCP
            targetPort: 29811
          eap-v4-discovery2:
            port: 29812
            protocol: TCP
            targetPort: 29812
          eap-v4-upgrade:
            port: 29813
            protocol: TCP
            targetPort: 29813
          eap-v5-manage:
            port: 29814
            protocol: TCP
            targetPort: 29814
          eap-v5-device-info:
            port: 29815
            protocol: TCP
            targetPort: 29815
          eap-v5-remote-control:
            port: 29816
            protocol: TCP
            targetPort: 29816
          init-check:
            port: 27001
            protocol: UDP
            targetPort: 27001
          old-init-info:
            port: 27002
            protocol: TCP
            targetPort: 27002
          old-db-access:
            port: 27017
            protocol: TCP
            targetPort: 27017
          db-access:
            port: 27217
            protocol: TCP
            targetPort: 27217
    ingress:
      app:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/upstream-vhost: "omada.${CLUSTER_DOMAIN}:8043"
          nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
        hosts:
          - host: ${GATUS_SUBDOMAIN}.${CLUSTER_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /opt/tplink/EAPController/data
      work:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /opt/tplink/EAPController/work
      logs:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /opt/tplink/EAPController/logs
      backup:
        type: nfs
        server: "${BACKUP_SERVER:=fnord}"
        path: /backup/data/k8s/omada
        globalMounts:
          - path: /opt/tplink/EAPController/data/autobackup
