---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "${APP}-volsync"
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: "${APP}-volsync"
    template:
      data:
        RESTIC_REPOSITORY: "{{ .REPOSITORY_TEMPLATE }}/testing/${APP}"
        RESTIC_PASSWORD: "{{ .RESTIC_PASSWORD }}"
        AWS_ACCESS_KEY_ID: "{{ .AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "{{ .AWS_SECRET_ACCESS_KEY }}"
  dataFrom:
    - extract:
        key: volsync-restic-template
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/volsync.backube/replicationsource_v1alpha1.json
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: "${APP}"
spec:
  sourcePVC: "${VOLSYNC_CLAIM:=${APP}}"
  trigger:
    schedule: "0 * * * *"
  restic:
    copyMethod: Snapshot
    pruneIntervalDays: 7
    repository: "${APP}-volsync"
    volumeSnapshotClassName: "${VOLSYNC_SNAPSHOTCLASS:=longhorn}"
    cacheCapacity: "${VOLSYNC_CACHE_CAPACITY:=5Gi}"
    cacheStorageClassName: "${VOLSYNC_CACHE_SNAPSHOTCLASS:=longhorn-volsync}"
    cacheAccessModes: ["${VOLSYNC_CACHE_ACCESSMODES:=ReadWriteOnce}"]
    storageClassName: "${VOLSYNC_STORAGECLASS:=longhorn}"
    accessModes: ["${VOLSYNC_SNAP_ACCESSMODES:=ReadWriteOnce}"]
    moverSecurityContext:
      runAsUser: ${VOLSYNC_PUID:=1000}
      runAsGroup: ${VOLSYNC_PGID:=1000}
      fsGroup: ${VOLSYNC_PGID:=1000}
    retain:
      hourly: 24
      daily: 7
      weekly: 5
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/volsync.backube/replicationdestination_v1alpha1.json
apiVersion: volsync.backube/v1alpha1
kind: ReplicationDestination
metadata:
  name: "${APP}-bootstrap"
  labels:
    kustomize.toolkit.fluxcd.io/ssa: IfNotPresent
spec:
  trigger:
    manual: restore-once
  restic:
    repository: "${APP}-volsync"
    copyMethod: Snapshot
    volumeSnapshotClassName: "${VOLSYNC_SNAPSHOTCLASS:=longhorn}"
    cacheStorageClassName: "${VOLSYNC_CACHE_SNAPSHOTCLASS:=longhorn-volsync}"
    cacheAccessModes: ["${VOLSYNC_CACHE_ACCESSMODES:=ReadWriteOnce}"]
    cacheCapacity: "${VOLSYNC_CACHE_CAPACITY:=5Gi}"
    storageClassName: "${VOLSYNC_STORAGECLASS:=longhorn}"
    accessModes: ["${VOLSYNC_ACCESSMODES:=ReadWriteOnce}"]
    capacity: "${VOLSYNC_CAPACITY:=5Gi}"
    moverSecurityContext:
      runAsUser: ${VOLSYNC_PUID:=1000}
      runAsGroup: ${VOLSYNC_PGID:=1000}
      fsGroup: ${VOLSYNC_PGID:=1000}
    enableFileDeletion: true
    # true for Rook-Ceph, false for Longhorn
    cleanupCachePVC: false
    cleanupTempPVC: false
