---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: rook-ceph-cluster
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: v1.18.0
  url: oci://ghcr.io/rook/rook-ceph-cluster
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: true
    route:
      dashboard:
        host:
          name: rook.${CLUSTER_DOMAIN}
          path: /
          pathType: PathPrefix
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
        mon:
          mon_data_avail_warn: "20" # quote
      cleanupPolicy:
        wipeDevicesFromOtherClusters: true
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: k3s0
            devices:
              - name: /dev/disk/by-id/nvme-PC601_NVMe_SK_hynix_512GB_SI97N008610707NDF
          - name: k3s2
            devices:
              - name: /dev/disk/by-id/nvme-NE-512_2280_0027843000089
          - name: k3s3
            devices:
              - name: /dev/disk/by-id/nvme-KXG50ZNV512G_TOSHIBA_X8UF60F1F6GS
      placement:
        osd:
          tolerations:
            - key: node.kubernetes.io/unschedulable
              operator: Exists
        mgr: &placement
          # nodeAffinity:
          #   requiredDuringSchedulingIgnoredDuringExecution:
          #     nodeSelectorTerms:
          #       - matchExpressions:
          #           - key: node-role.kubernetes.io/control-plane
          #             operator: Exists
          tolerations:
            - key: node-role.kubernetes.io/control-plane
              operator: Exists
        mon: *placement
      # FIXME: do I still need these
      healthCheck:
        livenessProbe:
          mon:
            probe:
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
          mgr:
            probe:
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
          osd:
            probe:
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
        startupProbe:
          mon:
            probe:
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 10
          mgr:
            probe:
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 10
          osd:
            probe:
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 10
      resources:
        mgr:
          limits:
            cpu: 500m
            memory: 640Mi
          requests:
            cpu: 50m
            memory: 320Mi
        mon:
          limits:
            cpu: 500m
            memory: 640Mi
          requests:
            cpu: 100m
            memory: 320Mi
        osd:
          limits:
            cpu: 500m
            memory: 1600Mi
          requests:
            cpu: 150m
            memory: 800Mi
        prepareosd:
          limits:
            cpu: 1000m
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 200Mi
        mgr-sidecar:
          limits:
            cpu: 256m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 40Mi
        crashcollector:
          limits:
            cpu: 100m
            memory: 64M
          requests:
            cpu: 15m
            memory: 32M
        logcollector:
          limits:
            cpu: 50m
            memory: 32Mi
          requests:
            cpu: 5m
            memory: 16Mi
        cleanup:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 100Mi
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            compression_mode: aggressive
            compression_algorithm: zstd
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    # NOTE: After disabling the filesystem, the filesystem can be removed with the following commands:
    # ceph fs fail ceph-filesystem && ceph fs rm ceph-filesystem --yes-i-really-mean-it
    cephFileSystems: []
    cephObjectStores: []
