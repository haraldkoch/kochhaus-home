---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      lldap:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/haraldkoch/postgres-init
              tag: 17.6@sha256:51a01657a7a562353d0229ff3824e659d4006f7a34f43ab79cfb79de22879a1a
            envFrom: &envFrom
              - secretRef:
                  name: lldap-secret
        containers:
          app:
            image:
              repository: ghcr.io/lldap/lldap
              tag: v0.6.2
            env:
              TZ: ${TIMEZONE:=Etc/UTC}
              LLDAP_HTTP_PORT: &port 80
              LLDAP_HTTP_URL: https://lldap.${CLUSTER_DOMAIN}
              LLDAP_LDAP_PORT: &ldapPort 389
              LLDAP_LDAP_BASE_DN: dc=home,dc=arpa
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 5m
                memory: 36M
              limits:
                memory: 128M
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      app:
        controller: lldap
        ports:
          http:
            port: *port
            primary: true
          ldap:
            port: *ldapPort
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${CLUSTER_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      data:
        type: emptyDir
