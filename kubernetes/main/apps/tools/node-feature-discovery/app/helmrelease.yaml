---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: node-feature-discovery
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 0.17.3
  url: oci://ghcr.io/home-operations/charts-mirror/node-feature-discovery
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: node-feature-discovery
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: node-feature-discovery
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    worker:
      config:
        core:
          sources: ["custom", "pci", "usb"]
        sources:
          usb:
            deviceClassWhitelist: ["02", "03", "0a", "ef", "fe", "ff"]
            deviceLabelFields: ["class", "vendor", "device"]
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
    master:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: In
                    values: [""]
    prometheus:
      enable: true
