---
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: downloads-gateway-pod-gateway-webhook-selfsign
  namespace: "vpn"
  labels:
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: downloads-gateway
spec:
  selfSigned: {}
---
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: downloads-gateway-pod-gateway-webhook-ca
  namespace: "vpn"
  labels:
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: downloads-gateway
spec:
  secretName: downloads-gateway-pod-gateway-webhook-ca
  duration: 43800h # 5y
  issuerRef:
    name: downloads-gateway-pod-gateway-webhook-selfsign
    kind: Issuer
  commonName: "ca.pod-gateway.cert-manager"
  isCA: true
---
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: downloads-gateway-pod-gateway-webhook-ca
  namespace: "vpn"
  labels:
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: downloads-gateway
spec:
  ca:
    secretName: downloads-gateway-pod-gateway-webhook-ca
---
# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: downloads-gateway-pod-gateway-webhook-tls
  namespace: "vpn"
  labels:
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: downloads-gateway
spec:
  secretName: downloads-gateway-pod-gateway-webhook-tls
  duration: 8760h # 1y
  issuerRef:
    name: downloads-gateway-pod-gateway-webhook-ca
    kind: Issuer
  dnsNames:
    - downloads-gateway-pod-gateway-webhook
    - downloads-gateway-pod-gateway-webhook.vpn
    - downloads-gateway-pod-gateway-webhook.vpn.svc
